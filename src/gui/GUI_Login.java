/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import gui.GUI_Menu;
import java.awt.BorderLayout;
import java.awt.Menu;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import java.sql.*;

/**
 *
 * @author Vespertino
 */
public class GUI_Login extends javax.swing.JPanel {

    private GUI_Menu mainP;
    private static final String URL = "jdbc:mariadb://localhost:3306/gestion_notas";
    private static final String USER = "root";
    private static final String PASSWORD = "alumno";

    public GUI_Login() {
        initComponents();
        setVisible(true);
        setSize(1000, 1000);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuIntroDatos = new javax.swing.JPanel();
        Usuario = new javax.swing.JLabel();
        Enviar = new javax.swing.JButton();
        olvidePwd = new javax.swing.JButton();
        Contraeña = new javax.swing.JLabel();
        pwdInput = new javax.swing.JPasswordField();
        userInput = new javax.swing.JTextField();
        botonVolver = new javax.swing.JButton();

        setBackground(new java.awt.Color(65, 70, 80));
        setForeground(new java.awt.Color(255, 255, 255));
        setAlignmentX(1.0F);
        setAlignmentY(1.0F);
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setEnabled(false);
        setMaximumSize(new java.awt.Dimension(800, 800));
        setName("Maracandacas_Project"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuIntroDatos.setBackground(new java.awt.Color(51, 51, 51));
        MenuIntroDatos.setMaximumSize(new java.awt.Dimension(328, 294));
        MenuIntroDatos.setMinimumSize(new java.awt.Dimension(328, 294));
        MenuIntroDatos.setName(""); // NOI18N

        Usuario.setBackground(new java.awt.Color(0, 0, 0));
        Usuario.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        Usuario.setForeground(new java.awt.Color(255, 255, 255));
        Usuario.setText("Usuario");
        Usuario.setMaximumSize(new java.awt.Dimension(800, 800));
        Usuario.setPreferredSize(new java.awt.Dimension(800, 800));

        Enviar.setBackground(new java.awt.Color(102, 255, 102));
        Enviar.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        Enviar.setForeground(new java.awt.Color(0, 0, 0));
        Enviar.setText("Enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        olvidePwd.setBackground(new java.awt.Color(204, 255, 255));
        olvidePwd.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        olvidePwd.setForeground(new java.awt.Color(0, 0, 0));
        olvidePwd.setText("Olvidé mi contraseña");
        olvidePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                olvidePwdActionPerformed(evt);
            }
        });

        Contraeña.setBackground(new java.awt.Color(0, 0, 0));
        Contraeña.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        Contraeña.setForeground(new java.awt.Color(255, 255, 255));
        Contraeña.setText("Contraseña");
        Contraeña.setMaximumSize(new java.awt.Dimension(800, 800));
        Contraeña.setPreferredSize(new java.awt.Dimension(800, 800));

        pwdInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pwdInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        userInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuIntroDatosLayout = new javax.swing.GroupLayout(MenuIntroDatos);
        MenuIntroDatos.setLayout(MenuIntroDatosLayout);
        MenuIntroDatosLayout.setHorizontalGroup(
            MenuIntroDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuIntroDatosLayout.createSequentialGroup()
                .addGroup(MenuIntroDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuIntroDatosLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(MenuIntroDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contraeña, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userInput)
                            .addComponent(pwdInput)
                            .addComponent(Enviar, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)))
                    .addGroup(MenuIntroDatosLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(olvidePwd, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 83, Short.MAX_VALUE))
        );
        MenuIntroDatosLayout.setVerticalGroup(
            MenuIntroDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuIntroDatosLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Contraeña, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(olvidePwd)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        add(MenuIntroDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 460, -1));

        botonVolver.setBackground(new java.awt.Color(51, 51, 51));
        botonVolver.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        botonVolver.setForeground(new java.awt.Color(255, 255, 255));
        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });
        add(botonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 115, 48));
    }// </editor-fold>//GEN-END:initComponents

    private String calcularMD5(char[] contrasena) throws NoSuchAlgorithmException {
        // Convertir char[] a String (necesario para MD5)
        String password = new String(contrasena);

        // Calcular MD5
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] hashBytes = md.digest(password.getBytes());

        // Convertir bytes a hexadecimal (para almacenamiento)
        StringBuilder hexString = new StringBuilder();
        for (byte b : hashBytes) {
            hexString.append(String.format("%02x", b));
        }

        return hexString.toString();
    }

    private Connection getConnection() throws SQLException {
        return (Connection) DriverManager.getConnection(URL, USER, PASSWORD);
    }

    private String buscarSomeone() {
        // aqui coloca la tabla que quieres buscar 
        String tabla = "alumno";
        // aqui se debe colocar el nombre de la variable, usuario o etc
        String nombreUsuario = "usuario_a";
        // checa que despues de Select contraseña se debe comprobar con tabla
        String sql = "SELECT contrasena_a FROM " + tabla + " where " + nombreUsuario + " = '" + userInput.getText() + "'"; // Tu consulta real

        try (Connection conn = getConnection()) {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            // if acortado
            if (rs.next()) {
                System.out.println(rs.getString(1));// Si hay una fila disponible
                return rs.getString(1);    // Obtener el valor de la columna 1
            } else {
                return "Valor no encontrado"; // Mensaje alternativo
            }

        } catch (SQLException e) {
            return "Error en búsqueda: " + e.getMessage();
        }
    }
    private String buscarSomeone2() {
        // aqui coloca la tabla que quieres buscar 
        String tabla = "profesor";
        // aqui se debe colocar el nombre de la variable, usuario o etc
        String nombreUsuario = "usuario_p";
        // checa que despues de Select contraseña se debe comprobar con tabla
        String sql = "SELECT contrasena_p FROM " + tabla + " where " + nombreUsuario + " = '" + userInput.getText() + "'"; // Tu consulta real

        try (Connection conn = getConnection()) {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            // if acortado
            if (rs.next()) {
                System.out.println(rs.getString(1));// Si hay una fila disponible
                return rs.getString(1);   // Obtener el valor de la columna 1
            } else {
                return "Valor no encontrado"; // Mensaje alternativo
            }

        } catch (SQLException e) {
            return "Error en búsqueda: " + e.getMessage();
        }
    }

    /* private String buscarProfessione (){
     String tabla = "empleados"; // Nombre real de tu tabla
    String columnaNombre = "nombre"; // Columna para el nombre
    String columnaProfesion = "profesion"; // Columna para la profesión
    String nombre = userInput.getText(); // Valor del input del nombre

    String sql = "SELECT " + columnaProfesion + " FROM " + tabla + " WHERE " + columnaNombre + " = '"+nombre+"' ";
    
    try (Connection conn = getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {
        try (ResultSet rs = pstmt.executeQuery()) {
            return rs.next() ? rs.getString(1) : "Profesión no registrada";
        }
        
    } catch (SQLException e) {
        return "Error en profesión: " + e.getMessage();
    }

    }*/
    private String verificarLogin() {
        String md5InGame = buscarSomeone();
        String md5InGame2 = buscarSomeone2();
        boolean professore = userInput.getText().contains("prof");
        boolean studente = userInput.getText().contains("alumno");

        try {
            String md5Ingresado = calcularMD5(pwdInput.getPassword());
            if (MessageDigest.isEqual(md5Ingresado.getBytes(), md5InGame2.getBytes()) && professore == true) {
                System.out.println("es Profesor");
                return "professore";
            } else if (MessageDigest.isEqual(md5Ingresado.getBytes(), md5InGame.getBytes()) && studente == true) {
                System.out.println("Es estudiante");
                return "studente";
            }
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(GUI_Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("no es nadie");
        return "devulvan el oro";
    }
    public int AlumnoIDConseguir() {
    String variable = userInput.getText();
    String sql = "SELECT id_alumno FROM alumno WHERE usuario_a = '"+variable+"'";
    
    try (Connection conn = getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {
        
        pstmt.setString(1, variable);
        
        try (ResultSet rs = pstmt.executeQuery()) {
            if (rs.next()) {
                int id = rs.getInt("id_alumno"); // Better to use column name
                System.out.println("Found ID: " + id);
                return id;
            }
            System.out.println("No student found with username: " + variable);
            return 0;
        }
    } catch (SQLException e) {
        System.err.println("Database error: " + e.getMessage());
        return 0;
    }}
    public int ProfeID() {
    String variable = userInput.getText();
    String sql = "SELECT id_profesor FROM profesor WHERE usuario_p = '"+variable+"'";
    
    try (Connection conn = getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {
        
        pstmt.setString(1, variable);
        
        try (ResultSet rs = pstmt.executeQuery()) {
            if (rs.next()) {
                int id = rs.getInt("id_profesor"); // Better to use column name
                System.out.println("Found ID: " + id);
                return id;
            }
            System.out.println("No student found with username: " + variable);
            return 0;
        }
    } catch (SQLException e) {
        System.err.println("Database error: " + e.getMessage());
        return 0;
    }}
    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed

        // verificarLogin es un metodo que devuelve un string, si la verificacion es exitosa entra a alumno
        // add --> U need add the method for the teacher or admin
        if (verificarLogin().equals("professore")) {

            SwingUtilities.getWindowAncestor(Enviar).dispose();

            // Cria um painel de notas do aluno  
            ProfeMainV2 profe = new ProfeMainV2();
            profe.setVisible(true);
            profe.setProfeID(ProfeID());
          
            
            
        } else if (verificarLogin().equals("studente")) {
            // Fecha a janela atual  
            SwingUtilities.getWindowAncestor(Enviar).dispose();
            // Cria uma nova janela principal (GUI_Menu) JFRAME <-- this is important not a JPanel, create Menu who is JFrame  
            // adittionally menu has the method showMe, which is why we use GUI_Menu and not another JFrame in this case  
            mainP = new GUI_Menu();
            // Cria um painel de notas do aluno  
            GUI_Alumno_Notas notas = new GUI_Alumno_Notas();
            // Define um ID de aluno na classe notas do aluno para poder verificar com o banco de dados
            notas.setAlumnoID(AlumnoIDConseguir());
            // Usa o método showMe() para mostrar o painel de notas na janela principal  
            mainP.showMe(notas);
            // Torna a nova janela visível  
            mainP.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Nos robaron el cobre");
        }
    }//GEN-LAST:event_EnviarActionPerformed

    private void olvidePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_olvidePwdActionPerformed
        JOptionPane.showMessageDialog(null, "Debes de pedir cita en IesClaraDelRey.es/citaOnline");
    }//GEN-LAST:event_olvidePwdActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        SwingUtilities.getWindowAncestor(botonVolver).dispose();
        mainP = new GUI_Menu();


    }//GEN-LAST:event_botonVolverActionPerformed

    private void userInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userInputActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Contraeña;
    private javax.swing.JButton Enviar;
    private javax.swing.JPanel MenuIntroDatos;
    private javax.swing.JLabel Usuario;
    private javax.swing.JButton botonVolver;
    private javax.swing.JButton olvidePwd;
    private javax.swing.JPasswordField pwdInput;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
}
